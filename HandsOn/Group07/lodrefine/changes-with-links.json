[
  {
    "op": "core/column-removal",
    "columnName": "PK",
    "description": "Remove column PK"
  },
  {
    "op": "core/column-removal",
    "columnName": "HORARIO",
    "description": "Remove column HORARIO"
  },
  {
    "op": "core/column-removal",
    "columnName": "EQUIPAMIENTO",
    "description": "Remove column EQUIPAMIENTO"
  },
  {
    "op": "core/column-removal",
    "columnName": "Column",
    "description": "Remove column Column"
  },
  {
    "op": "core/column-removal",
    "columnName": "TIPO",
    "description": "Remove column TIPO"
  },
  {
    "op": "core/column-removal",
    "columnName": "COORDENADA-Y",
    "description": "Remove column COORDENADA-Y"
  },
  {
    "op": "core/column-removal",
    "columnName": "COORDENADA-X",
    "description": "Remove column COORDENADA-X"
  },
  {
    "op": "core/column-removal",
    "columnName": "ORIENTACION",
    "description": "Remove column ORIENTACION"
  },
  {
    "op": "core/column-removal",
    "columnName": "TIPO-NUM",
    "description": "Remove column TIPO-NUM"
  },
  {
    "op": "core/column-removal",
    "columnName": "ACCESIBILIDAD",
    "description": "Remove column ACCESIBILIDAD"
  },
  {
    "op": "core/column-removal",
    "columnName": "TELEFONO",
    "description": "Remove column TELEFONO"
  },
  {
    "op": "core/column-removal",
    "columnName": "FAX",
    "description": "Remove column FAX"
  },
  {
    "op": "core/column-removal",
    "columnName": "EMAIL",
    "description": "Remove column EMAIL"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TRANSPORTE",
    "expression": "value.toLowercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TRANSPORTE using expression value.toLowercase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TRANSPORTE",
    "expression": "jython:import string\n\nindex = string.find(value, \"servicio bicimad\")\n\nindex2 = string.find(value, \"renfe\")\n\nif index2 < index and index2 != -1:\n   index = index2\n\nreturn value[0:index]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TRANSPORTE using expression jython:import string\n\nindex = string.find(value, \"servicio bicimad\")\n\nindex2 = string.find(value, \"renfe\")\n\nif index2 < index and index2 != -1:\n   index = index2\n\nreturn value[0:index]"
  },
  {
    "op": "core/column-split",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TRANSPORTE",
    "guessCellType": true,
    "removeOriginalColumn": false,
    "mode": "separator",
    "separator": "b[uÃº]s:",
    "regex": true,
    "maxColumns": 0,
    "description": "Split column TRANSPORTE by separator"
  },
  {
    "op": "core/column-removal",
    "columnName": "TRANSPORTE 3",
    "description": "Remove column TRANSPORTE 3"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TRANSPORTE 1",
    "expression": "jython:return value[6:]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TRANSPORTE 1 using expression jython:return value[6:]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TRANSPORTE 1",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TRANSPORTE 1 using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TRANSPORTE 2",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TRANSPORTE 2 using expression value.trim()"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "TRANSPORTE 1",
    "newColumnName": "ACCESO METRO",
    "description": "Rename column TRANSPORTE 1 to ACCESO METRO"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "TRANSPORTE 2",
    "newColumnName": "ACCESO BUS",
    "description": "Rename column TRANSPORTE 2 to ACCESO BUS"
  },
  {
    "op": "core/column-removal",
    "columnName": "TRANSPORTE",
    "description": "Remove column TRANSPORTE"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "NOMBRE-VIA",
    "expression": "grel:cells['NUM'].value + \" \" +   value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column NOMBRE-VIA using expression grel:cells['NUM'].value + \" \" +   value"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "NOMBRE-VIA",
    "newColumnName": "ADRESS",
    "description": "Rename column NOMBRE-VIA to ADRESS"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "ADRESS",
    "newColumnName": "ADDRESS",
    "description": "Rename column ADRESS to ADDRESS"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "ADDRESS",
    "newColumnName": "ADDRESS (RDF)",
    "description": "Rename column ADDRESS to ADDRESS (RDF)"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "CODIGO-POSTAL",
    "newColumnName": "PostalCode (RDF)",
    "description": "Rename column CODIGO-POSTAL to PostalCode (RDF)"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "LATITUD",
    "newColumnName": "LATITUD (RDF)",
    "description": "Rename column LATITUD to LATITUD (RDF)"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "LONGITUD",
    "newColumnName": "LONGITUD (RDF)",
    "description": "Rename column LONGITUD to LONGITUD (RDF)"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "PROVINCIA",
    "newColumnName": "PROVINCIA (RDF)",
    "description": "Rename column PROVINCIA to PROVINCIA (RDF)"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "LOCALIDAD",
    "newColumnName": "LOCALIDAD (RDF)",
    "description": "Rename column LOCALIDAD to LOCALIDAD (RDF)"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "LOCALIDAD (RDF)",
    "newColumnName": "LOCALIDAD (RDF",
    "description": "Rename column LOCALIDAD (RDF) to LOCALIDAD (RDF"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "LOCALIDAD (RDF",
    "newColumnName": "LOCALIDAD",
    "description": "Rename column LOCALIDAD (RDF to LOCALIDAD"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "DISTRITO",
    "newColumnName": "DISTRITO (RDF)",
    "description": "Rename column DISTRITO to DISTRITO (RDF)"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Starred Rows",
          "expression": "row.starred",
          "columnName": "",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "LOCALIDAD",
    "newColumnName": "LOCALIDAD (RDF)",
    "description": "Rename column LOCALIDAD to LOCALIDAD (RDF)"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "LOCALIDAD (RDF)",
    "newColumnName": "LOCALIDAD (RDF",
    "description": "Rename column LOCALIDAD (RDF) to LOCALIDAD (RDF"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "LOCALIDAD (RDF",
    "newColumnName": "LOCALIDAD",
    "description": "Rename column LOCALIDAD (RDF to LOCALIDAD"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "LOCALIDAD",
    "newColumnName": "LOCALIDAD (RDF)",
    "description": "Rename column LOCALIDAD to LOCALIDAD (RDF)"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "LOCALIDAD (RDF)",
    "newColumnName": "LOCALIDAD (RDF",
    "description": "Rename column LOCALIDAD (RDF) to LOCALIDAD (RDF"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "LOCALIDAD (RDF",
    "newColumnName": "LOCALIDAD",
    "description": "Rename column LOCALIDAD (RDF to LOCALIDAD"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "NOMBRE",
    "expression": "jython:import re\n\nvalue.replace('Ã¡', 'a')\nvalue.replace('Ã©', 'e')\nvalue.replace('Ã­', 'i')\nvalue.replace('Ã³', 'o')\nvalue.replace('Ãº', 'u')",
    "onError": "set-to-blank",
    "newColumnName": "name_URL",
    "columnInsertIndex": 1,
    "description": "Create column name_URL at index 1 based on column NOMBRE using expression jython:import re\n\nvalue.replace('Ã¡', 'a')\nvalue.replace('Ã©', 'e')\nvalue.replace('Ã­', 'i')\nvalue.replace('Ã³', 'o')\nvalue.replace('Ãº', 'u')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "name_URL",
    "expression": "jython:import re\nresult = cells[\"NOMBRE\"].value\n\nresult = re.sub('Ã¡','a', result)\nresult = re.sub('Ã©','e', result)\nresult = re.sub('Ã­','i', result)\nresult = re.sub('Ã³','o', result)\nresult = re.sub('Ãº','u', result)\nresult = re.sub('Ã±','n', result)\nresult = re.sub(' ','_', result)\nresult = result.lower()\n\nreturn result",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column name_URL using expression jython:import re\nresult = cells[\"NOMBRE\"].value\n\nresult = re.sub('Ã¡','a', result)\nresult = re.sub('Ã©','e', result)\nresult = re.sub('Ã­','i', result)\nresult = re.sub('Ã³','o', result)\nresult = re.sub('Ãº','u', result)\nresult = re.sub('Ã±','n', result)\nresult = re.sub(' ','_', result)\nresult = result.lower()\n\nreturn result"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "name_URL",
    "expression": "jython:import re\nresult = cells[\"NOMBRE\"].value\n\nresult = re.sub('Ã¡','a', result)\nresult = re.sub('Ã©','e', result)\nresult = re.sub('Ã­','i', result)\nresult = re.sub('Ã³','o', result)\nresult = re.sub('Ãº','u', result)\nresult = re.sub('Ã±','n', result)\nresult = re.sub(' ','_', result)\nresult = result.lower()\n\nreturn result",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column name_URL using expression jython:import re\nresult = cells[\"NOMBRE\"].value\n\nresult = re.sub('Ã¡','a', result)\nresult = re.sub('Ã©','e', result)\nresult = re.sub('Ã­','i', result)\nresult = re.sub('Ã³','o', result)\nresult = re.sub('Ãº','u', result)\nresult = re.sub('Ã±','n', result)\nresult = re.sub(' ','_', result)\nresult = result.lower()\n\nreturn result"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "core/recon",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "DISTRITO (RDF)",
    "config": {
      "mode": "standard-service",
      "service": "https://tools.wmflabs.org/openrefine-wikidata/en/api",
      "identifierSpace": "http://www.wikidata.org/entity/",
      "schemaSpace": "http://www.wikidata.org/prop/direct/",
      "type": {
        "id": "Q3032114",
        "name": "district of Madrid"
      },
      "autoMatch": true,
      "columnDetails": [],
      "limit": 0
    },
    "description": "Reconcile cells in column DISTRITO (RDF) to type Q3032114"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "core/recon",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "DISTRITO (RDF): judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "DISTRITO (RDF)",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "matched",
                "l": "matched"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "NOMBRE",
    "config": {
      "mode": "standard-service",
      "service": "https://tools.wmflabs.org/openrefine-wikidata/en/api",
      "identifierSpace": "http://www.wikidata.org/entity/",
      "schemaSpace": "http://www.wikidata.org/prop/direct/",
      "type": {
        "id": "Q1107656",
        "name": "garden"
      },
      "autoMatch": true,
      "columnDetails": [
        {
          "column": "ADDRESS (RDF)",
          "propertyName": "located at street address",
          "propertyID": "P6375"
        }
      ],
      "limit": 0
    },
    "description": "Reconcile cells in column NOMBRE to type Q1107656"
  },
  {
    "op": "core/recon",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "DISTRITO (RDF): judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "DISTRITO (RDF)",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "matched",
                "l": "matched"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "NOMBRE: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "NOMBRE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "NOMBRE",
    "config": {
      "mode": "standard-service",
      "service": "https://tools.wmflabs.org/openrefine-wikidata/en/api",
      "identifierSpace": "http://www.wikidata.org/entity/",
      "schemaSpace": "http://www.wikidata.org/prop/direct/",
      "type": {
        "id": "Q22698",
        "name": "park"
      },
      "autoMatch": true,
      "columnDetails": [],
      "limit": 0
    },
    "description": "Reconcile cells in column NOMBRE to type Q22698"
  },
  {
    "op": "core/recon",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "DISTRITO (RDF): judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "DISTRITO (RDF)",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "matched",
                "l": "matched"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "NOMBRE: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "NOMBRE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "NOMBRE",
    "config": {
      "mode": "standard-service",
      "service": "https://tools.wmflabs.org/openrefine-wikidata/en/api",
      "identifierSpace": "http://www.wikidata.org/entity/",
      "schemaSpace": "http://www.wikidata.org/prop/direct/",
      "type": {
        "id": "Q22746",
        "name": "urban park"
      },
      "autoMatch": true,
      "columnDetails": [],
      "limit": 0
    },
    "description": "Reconcile cells in column NOMBRE to type Q22746"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "core/recon",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "DISTRITO (RDF)",
    "config": {
      "mode": "standard-service",
      "service": "https://tools.wmflabs.org/openrefine-wikidata/en/api",
      "identifierSpace": "http://www.wikidata.org/entity/",
      "schemaSpace": "http://www.wikidata.org/prop/direct/",
      "type": {
        "id": "Q3032114",
        "name": "district of Madrid"
      },
      "autoMatch": true,
      "columnDetails": [],
      "limit": 0
    },
    "description": "Reconcile cells in column DISTRITO (RDF) to type Q3032114"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "DISTRITO (RDF)",
    "expression": "grel:\"https://www.wikidata.org/wiki/\"+cell.recon.match.id",
    "onError": "set-to-blank",
    "newColumnName": "District Recon",
    "columnInsertIndex": 18,
    "description": "Create column District Recon at index 18 based on column DISTRITO (RDF) using expression grel:\"https://www.wikidata.org/wiki/\"+cell.recon.match.id"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    },
    "description": "Save RDF schema skeleton"
  },
  {
    "op": "core/recon",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "NOMBRE",
    "config": {
      "mode": "standard-service",
      "service": "https://tools.wmflabs.org/openrefine-wikidata/en/api",
      "identifierSpace": "http://www.wikidata.org/entity/",
      "schemaSpace": "http://www.wikidata.org/prop/direct/",
      "type": {
        "id": "Q22698",
        "name": "park"
      },
      "autoMatch": true,
      "columnDetails": [],
      "limit": 0
    },
    "description": "Reconcile cells in column NOMBRE to type Q22698"
  },
  {
    "op": "core/recon",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "NOMBRE",
    "config": {
      "mode": "standard-service",
      "service": "https://tools.wmflabs.org/openrefine-wikidata/en/api",
      "identifierSpace": "http://www.wikidata.org/entity/",
      "schemaSpace": "http://www.wikidata.org/prop/direct/",
      "type": {
        "id": "Q1107656",
        "name": "garden"
      },
      "autoMatch": true,
      "columnDetails": [],
      "limit": 0
    },
    "description": "Reconcile cells in column NOMBRE to type Q1107656"
  },
  {
    "op": "core/recon",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "NOMBRE: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "NOMBRE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "range",
          "name": "NOMBRE: best candidate's score",
          "expression": "cell.recon.best.score",
          "columnName": "NOMBRE",
          "from": 38,
          "to": 101,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "NOMBRE",
    "config": {
      "mode": "standard-service",
      "service": "https://tools.wmflabs.org/openrefine-wikidata/en/api",
      "identifierSpace": "http://www.wikidata.org/entity/",
      "schemaSpace": "http://www.wikidata.org/prop/direct/",
      "type": {
        "id": "Q22698",
        "name": "park"
      },
      "autoMatch": true,
      "columnDetails": [],
      "limit": 0
    },
    "description": "Reconcile cells in column NOMBRE to type Q22698"
  }
]