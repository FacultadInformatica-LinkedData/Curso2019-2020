Get all the classes

select distinct ?clase
where {
?x a ?clase
}
----> ^solo las que tienen instancias ----- v todas
select distinct ?clase
where 
{
{?clase rdf:type rdfs:Class}
UNION
{?x a ?clase}
}

-------------------------------------------------------------------

Get all the subclasses of the class Establishment

PREFIX ex: <http://GP-onto.fi.upm.es/exercise2#>

select distinct ?clase
where 
{
?clase rdfs:subClassOf ex:Establishment
} LIMIT 100

-------------------------------------------------------------------
Get all instances of the class City

PREFIX ex: <http://GP-onto.fi.upm.es/exercise2#>

select distinct ?city
where 
{
?city a ex:City
}

-------------------------------------------------------------------
Get the number of inhabitants of Santiago de Compostela

PREFIX ex: <http://GP-onto.fi.upm.es/exercise2#>

select distinct ?z
where 
{
ex:Santiago_de_Compostela ex:hasInhabitantNumber ?z
}

-------------------------------------------------------------------
Get the number of inhabitants of Santiago de Compostela and Arzua

PREFIX ex: <http://GP-onto.fi.upm.es/exercise2#>

select distinct ?y ?z
where 
{
?y ex:hasInhabitantNumber ?z .
FILTER(?y IN (ex:Arzua, ex:Santiago_de_Compostela))
}

-------------------------------------------------------------------
Get all places, together with the number of inhabitants, ordered by the place name (ascending)

PREFIX ex: <http://GP-onto.fi.upm.es/exercise2#>

select distinct ?y ?nombre ?z
where 
{
?y ex:hasInhabitantNumber ?z .
?y rdfs:label ?nombre
} ORDER BY ?nombre

-------------------------------------------------------------------
Get all instances of  Locality together with their number of inhabitants (if this information exists)

PREFIX ex: <http://GP-onto.fi.upm.es/exercise2#>

select distinct ?y ?z
where 
{
?y a/rdfs:subClassOf* ex:Locality .
OPTIONAL{?y ex:hasInhabitantNumber ?z} .
}

-------------------------------------------------------------------
Get all places with more than 200.000 inhabitants

PREFIX ex: <http://GP-onto.fi.upm.es/exercise2#>

select distinct ?y xsd:integer(?z) AS ?habitantes
where 
{
?y ex:hasInhabitantNumber ?z .
FILTER (xsd:integer(?z)>200000)
}

-------------------------------------------------------------------
Get postal address data for Pazo_Breogan (street, number, locality, province)

PREFIX ex: <http://GP-onto.fi.upm.es/exercise2#>

select distinct ?Adress ?calle ?number ?locality ?provincia
where 
{
ex:Pazo_Breogan ex:hasAddress ?Adress .
?Adress ex:hasStreet ?calle .
?Adress ex:hasNumber ?number .
ex:Pazo_Breogan ex:isPlacedIn ?locality .
?locality ex:inProvince ?provincia
}

-------------------------------------------------------------------
Get all subclasses of class Location

PREFIX ex: <http://GP-onto.fi.upm.es/exercise2#>

select distinct ?x
where 
{
?x rdfs:subClassOf ex:Location
}

-------------------------------------------------------------------
Get all instances of class Locality

PREFIX ex: <http://GP-onto.fi.upm.es/exercise2#>

select distinct ?x
where 
{
?x a/rdfs:subClassOf* ex:Locality
}

-------------------------------------------------------------------
Describe the resource with rdfs:label "Madrid”

PREFIX ex: <http://GP-onto.fi.upm.es/exercise2#>

describe ?x
where 
{
?x rdfs:label "Madrid"
}

-------------------------------------------------------------------
Construct a graph that relates directly all touristic places with their provinces, using a new property called ”isIn”
-------------------------------------------------------------------
Check whether there is any instance of Town

PREFIX ex: <http://GP-onto.fi.upm.es/exercise2#>

ask {?town a ex:Town}




-------------------------------------------------------------------
-------------------------------------------------------------------
-------------------------------------------------------------------
Get all the properties that can be applied to instances of the Politician class (<http://dbpedia.org/ontology/Politician>)


PREFIX ex:<http://dbpedia.org/ontology/Politician>

select distinct ?propiedades
where 
{
?x a <http://dbpedia.org/ontology/Politician> .
?x ?propiedades ?c
}

-------------------------------------------------------------------
Get all the properties, except rdf:type, that can be applied to instances of the Politician class

select distinct ?propiedades
where 
{
?x a <http://dbpedia.org/ontology/Politician> .
?x ?propiedades ?c
FILTER(?propiedades not IN (rdf:type))
}

-------------------------------------------------------------------
Which different values exist for the properties, except rdf:type, of the instances of the Politician class?

select distinct ?propiedades ?c
where 
{
?x a <http://dbpedia.org/ontology/Politician> .
?x ?propiedades ?c .
FILTER(?propiedades not IN (rdf:type))
}

-------------------------------------------------------------------
For each of the properties, except rdf:type, that can be applied to instances of the Politician class, which different values do they take in those instances?

select distinct ?x
where 
{
?x a <http://dbpedia.org/ontology/Politician> .
?x ?propiedades ?c .
FILTER(?propiedades not IN (rdf:type))  
}

-------------------------------------------------------------------
For each of the properties, except rdf:type, that can be applied to instances of the Politician class, how many distinct values do they take in those instances?

PREFIX ex:<http://dbpedia.org/ontology/Politician>

select distinct ?propiedades (COUNT(distinct ?c) as ?pCount)
where 
{
?x a <http://dbpedia.org/ontology/Politician> .
?x ?propiedades ?c .
FILTER(?propiedades not IN (rdf:type)) 
}

